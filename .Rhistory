rm(list = ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
library(VGAM); library(xtable); library(dotwhisker)
load("crash_base.RData")
crash <- crash[,c(1,2,4:7,9,15:20)]
save(crash, file = "crash.RData")
fit.1 <- vglm(severity ~ Road.Class + Speed.Limit + Weather + Time.of.Day + Type.of.Collision + At.Intersection.Flag, data = crash, family = cumulative(parallel = F ~ Road.Class),
trace = T)
rownames(coeff.matrix) <- NULL
coeff.matrix[,2:5] <- lapply(coeff.matrix[2:5], as.numeric)
vcov <- vcov(fit.1)
save(coeff.matrix, file = "Coeff.RData")
save(vcov, file = "vcov.RData")
load("Coeff.RData")
load("crash.RData")
load("vcov.RData")
unique(crash$Road.Class)
rm(list = ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
library(VGAM); library(xtable); library(dotwhisker)
load("crash_base.RData")
crash <- crash[,c(1,2,4:7,9,15:20)]
save(crash, file = "crash.RData")
fit.1 <- vglm(severity ~ Road.Class + Speed.Limit + Weather + Time.of.Day + Type.of.Collision + At.Intersection.Flag, data = crash, family = cumulative(parallel = F ~ Road.Class),
trace = T)
# Return coefficients explanation below Road.Class City Street and Time.Of.Day Day are base categories
s <- summaryvglm(fit.1); s
# Saving the coefficient matrix, but adjusting it to let it be a bit easier to pass on to
# Other funciton by changing the rownames of the matrix into its own column
coeff.matrix <- s@coef3; coeff.matrix
coeff.matrix <- cbind(coeff.matrix,c(rownames(coeff.matrix)))
colnames(coeff.matrix) <- c("estimate", "std.error", colnames(coeff.matrix)[3:4], "term")
rownames(coeff.matrix) <- NULL
coeff.matrix <- data.frame(coeff.matrix[,c(5,1:4)])
coeff.matrix[,2:5] <- lapply(coeff.matrix[2:5], as.numeric)
vcov <- vcov(fit.1)
save(coeff.matrix, file = "Coeff.RData")
save(vcov, file = "vcov.RData")
load("Coeff.RData")
load("crash.RData")
load("vcov.RData")
shiny::runApp()
runApp()
shiny::runApp()
